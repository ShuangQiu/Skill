; oad "~/.cdsinit_personal"
;#####################################################################
;# Automatically open the library browser 
dmbOpenLibBrowser()
;#####################################################################
;# Automatically size & position the CIW
;#
hiFlush()
hiResizeWindow( window(1) list(0:10 500:500))
; hiResizeWindow(window(1) list(3:30 750:180))      ; Left-hand side
; hiResizeWindow(window(1) list(400:30 1140:200))   ; Right-hand side
;#####################################################################
;# Automatically size & position the layout & LSW windows
;#
; deRegUserTriggers("maskLayout" nil nil 'InstallLayout)
; procedure( InstallLayout( l)
;  deInstallApp( getCurrentWindow() "layout")
;  hiResizeWindow(getCurrentWindow() list(125:30 1140:740))
;  leResizeLSW( list(5:875 120:1750))
; 
;  put anything else you'd like to happen each time a
;  layout window is opened here
;  )
;###################################################################
;# DEFAULT TEXT EDITOR
;    editor = "xterm -geometry 80x40 -e emacs -nw"
     editor = "emacs" ;;<= marche pas, ... quoi que peut etre.. ;; sisi, mais redémarrer cadence, (execusion dans icfb ne suffit pas) ?! sisi ca suffit
;    editor = "xterm -geometry 85x50 -e vi";
;    editor = "vi";
;    editor = "textedit";
;############################################################################
;# LOAD STROKE FILES
;#
;  loadi(strcat(AMS_DIR "/skill/ams_stroke.il"))
;  loadi(strcat(AMS_DIR "/skill/defstrokes.il"))
;  hiLoadStrokeFile(strcat(AMS_DIR "/skill/ams_layout.strokes") "Layout")
;############################################################################
;# DEFINE PERSONAL BIND KEYS
;#

; hiSetBindKey("Schematics"	"None<Btn2Down>(2)"	"schHiDescendRead()")

; geOpen(?lib geGetWindowCellView()~>libName ?cell geGetWindowCellView()~>cellName ?view "layout" ?mode "r")
hiSetBindKey("Command Interpreter"	"<key>F7"	"leUnmapLSW()")
hiSetBindKey("Command Interpreter"	"<key>F8"	"leRemapLSW()")
hiSetBindKey("Layout"	"<key>F7"	"leUnmapLSW()")
hiSetBindKey("Layout"	"<key>F8"	"leRemapLSW()")

hiSetBindKey("Layout" "None<Btn4Down>" "geScroll(nil \"n\" nil)")
hiSetBindKey("Layout" "None<Btn5Down>" "geScroll(nil \"s\" nil)")
hiSetBindKey("Schematics" "None<Btn4Down>" "geScroll(nil \"n\" nil)")
hiSetBindKey("Schematics" "None<Btn5Down>" "geScroll(nil \"s\" nil)")


;; desactive le bouton help
hiSetBindKey("Command Interpreter"      "<key>F1"       "")
hiSetBindKey("Layout"                   "<key>F1"       "")
hiSetBindKey("Schematics"               "<key>F1"       "")
hiSetBindKey("Symbol"                   "<key>F1"       "")
; hiSetBindKey("Layout" "Shift<Btn1Down>" "mouseAddSelectPt()" )	;EF
;############################################################################
;# SET UP USER PREFERENCES
;#
; envSetVal( "ui"    "showScrollBars" 'boolean t)
envSetVal( "ui"    "winPlaceStyle"  'boolean nil)
; envSetVal( "ui"    "infix"          'boolean t)
envSetVal( "ui"    "nestLimit"      'int  20)
; envSetVal( "ui"    "dblClkTime      'int  400)
envSetVal( "ui"    "undoLevel"      'int  10)
; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ALREADY in my ~/.cdsenv
envSetVal( "layout"	"lockAngles"	'boolean	t); option pour strech sinon les angles viennent pas
;layout segSnapMode string { orthogonal | diagonal | anyAngle | horizontal | vertical } 
envSetVal( "layout"  "segSnapMode"    'string "diagonal")
envSetVal( "schematic"	"schSnapSpacing"	'float	0.0325)

envSetVal( "layout"  "preservePins"    'boolean t);<== display pinNames
envSetVal( "layout" "displayPinNames" 'boolean t);<== ou ca ? display pinNames

;; when(not(rexMatchList("~/../ebecheto/Skill" getSkillPath()))  
;;     setSkillPath(cons("~/../ebecheto/Skill" getSkillPath())))

;loadi("/afs/in2p3.fr/group/micrhau/CADENCE/Skill/menu.il")  ;## lance le menu micrhau
 load("~/../ebecheto/Skill/menu.il")  ;## lance mon menu au démarage
; load("~/../ebecheto/Skill/menu.il.dev.il")  ;## lance mon menu au démarage


;#####################################################################
;# SET UP PREFERENCES FOR PLOTTER (if customisation file exists)
;# The .cdsSchPlotTemplate and .cdsLePlotTemplate files can be
;# created using the 'Save Template' button from the plotter form
when( isFile("~/.cdsSchPlotTemplate")   schPlotTemplate =  "~/.cdsSchPlotTemplate")
when( isFile("~/.cdsLePlotTemplate")    lePlotTemplate  =  "~/.cdsLePlotTemplate")

;############################################################################
;# OTHER PERSONAL CUSTOMISATIONS - ADD THEM HERE

; # envSetVal( "ui"    "MenuCmdInput"      'boolean  t) ## <= je ne sais plus à quoi ca sert


;; Ed modif : Simulation directories

when( rexMatchp("version 5" getVersion())	ocnWaveformTool( 'awd ) )        ;## selectionne AWD par defaut
; # hiSetBindKey("Schematics"  "q" "CCSSchObjProp()")

;;_deDisableMenuUpdates = t; pour eviter de figer ciw avec nouvelles versions cadence PB licences


tools='("Schematics" "Layout" "Symbol")
foreach(mapcar tool tools 
hiSetBindKey(tool "Shift<Key>z"  "hiZoomRelativeScale(hiGetCurrentWindow( ) 0.4)")
hiSetBindKey(tool "<Key>z"  "hiZoomRelativeScale(hiGetCurrentWindow( ) 2.0)")
hiSetBindKey(tool "Ctrl<Btn4Down>" "hiZoomInAtMouse()")
hiSetBindKey(tool "Ctrl<Btn5Down>" "hiZoomOutAtMouse()")
)

hiSetBindKey("Layout" "Ctrl <Key>c"  "leHiCreateMPP()") ;;<== then hit F3 key to display its menu
hiSetBindKey("Schematics" "Shift Ctrl<Key>s"  "{println(\"Editing selected object \")  hiEditPropList(car(geGetSelectedSet( )))}")
hiSetBindKey("Schematics" " Ctrl<Key>z" "hiUndo()")
hiSetBindKey("Schematics" " Ctrl<Key>y" "hiRedo()")
hiSetBindKey("Schematics" " Shift<Key>f" "schZoomFit(1.0 1.)")
hiSetBindKey("Schematics" " <Key>9" "geEnterAddNetProbe()")

;; => combine "x C-s" check and save, netlist and run
hiSetBindKey( "Schematics" "Ctrl<Key>s" "sevNetlistAndRun(hiGetCurrentWindow()->sevSession)")


;; ;; C-p pour waveform window et pour schematic window => print menu
;; hiSetBindKey( "awv" 	   "Ctrl<Key>r" "awvUpdateWindowMenuCB()")
;; hiSetBindKey( "awv" 	   "Ctrl<Key>p" "awvHardCopyMenuCB()")
;; hiSetBindKey( "awv"        "None<Key>s" "awvToStripMenuCB()")
;; hiSetBindKey( "awv"        "Shift<Key>s" "awvToCompositeMenuCB()")
;; hiSetBindKey( "awv"        "Ctrl<Key>w" "awvDeleteSubwindow(hiGetCurrentWindow() ?subwindow awvGetCurrentSubwindow( hiGetCurrentWindow() ) )")
;; hiSetBindKey( "awv"        "Ctrl<Key>h" "awvDeleteSubwindow(hiGetCurrentWindow() ?subwindow awvGetCurrentSubwindow( hiGetCurrentWindow() ) )")

hiSetBindKey( "Schematics" "Ctrl<Key>p" "schHiPlot()")
hiSetBindKey( "Schematics" "<Key>x" "schHiCheckAndSave()")
hiSetBindKey( "Schematics" "Shift<Key>p" "sevPrintResults( (getCurrentWindow)->sevSession 'dcOpPoints)")
hiSetBindKey( "Schematics" "<Key>a" "(if (sevSession getCurrentWindow()) (hiRaiseWindow (sevSession getCurrentWindow())~>window) deInstallApp( getCurrentWindow() \"analogArtist-Schematic\") )")

hiSetBindKey( "Layout" "Shift<Key>e" " leHiDescend( hiGetCurrentWindow() \"edit\" )")



; ##### Define display snaping mode
;; envSetVal( "layout" "xSnapSpacing" 'float 0.025)
;; envSetVal( "layout" "ySnapSpacing" 'float 0.025)
;  ^^ marche pas bien .... ^^

;; marche pas ...vv il y a R (shift-R) qui marche a la place
;; hiSetBindKey( "Symbol"  "None<Btn3Down>" "schHiRotate(t)")
;; hiSetBindKey( "Paramatric Analysis"  "Ctrl<Key>s"  "(apaStartCB (hiGetCurrentWindow) ?all t )")
;To bind the Setup  Environment command to the Shift-s key,type this in the CIW
; hiSetBindKey( "Schematics" "Ctrl<Key>s" "sevChooseEnvironmentOptions(hiGetCurrentWindow()->sevSession)")

; hiSetBindKey( "Command Interpreter" "Ctrl<Key>e" "t && setq(i_history -1) && history()")
; hiSetBindKey( "Command Interpreter" "Ctrl<Key>r" "t && ( i_history=sub1(i_history) ) && (history i_history)")



;; allows to toggle back annotate of DC operating point values onto the schematic  :
load("~/../ebecheto/Skill/CCStoggleDcOpPoints.ils")
hiSetBindKey("Schematics" "<Key>t" "CCStoggleDcOpPoints()")
load("~/../ebecheto/Skill/backAnnDC.il")
hiSetBindKey("Schematics" "Shift<Key>a" "backAnnDC()" )


;; hiSetBindKey("Schematics" "<Key>F5" "sevAnnotateResults(hiGetCurrentWindow()->sevSession 'dcTermCurrent)") ;; <==nul, marche que sur les vdc


;; hiSetBindKey("Schematics" "Shift<Key>t" "
;; cdfGetUserCellCDF( ddGetObj( \"PRIMLIB\" \"pmos4\"))~>opPointLabelSet = \"id vgs vds region\"
;; cdfGetUserCellCDF( ddGetObj( \"PRIMLIB\" \"nmos4\"))~>opPointLabelSet = \"id vgs vds region\" hiRedraw()")
;; hiSetBindKey("Schematics" "Ctrl<Key>t" "
;; cdfGetUserCellCDF( ddGetObj( \"PRIMLIB\" \"pmos4\"))~>opPointLabelSet = \"vth gm gds vdsat\"
;; cdfGetUserCellCDF( ddGetObj( \"PRIMLIB\" \"nmos4\"))~>opPointLabelSet = \"vth gm gds vdsat\" hiRedraw()")

;; to load my skill plotting file
;;hiSetBindKey("Schematics" "Ctrl<Key>w" "load(\"~/Skill/plots.scs\"")
; hiSetBindKey("Schematics" "Ctrl<Key>w" "load(sprintf(nil \"~/../ebecheto/Skill/plot_%s.scs\" geGetWindowCellView()~>cellName)")


;; getShellEnvVar("CDSDIR")
;; when(rexMatchp("lyopcs24" getShellEnvVar("HOSTNAME") ) || rexMatchp("lyopcs10.in2p3.fr" getShellEnvVar("HOSTNAME") )
;; 	when( isDir( strcat("/data/" getShellEnvVar("USER"))) 
;; 		printf("\t   _   _\n")
;; 		printf("\t  [#] [#] Simulation Directory set to :%s\n" strcat("/data/" getShellEnvVar("USER") "/Sim"))
;; 		printf("\t    (_)   ")
;; 		envSetVal( "asimenv.startup"  "projectDir" 'string strcat("/data/" getShellEnvVar("USER") "/Sim"))
;; 		when( rexMatchp("version 5" getVersion())
;; 			load("~/../ebecheto/Skill/assuraStartup.il");## lance le changement de répertoire par défaut des simulations Assura
;; 		);## ne marche plus avec version 6 car on ne peut plu redefinir vuiUserDefinedSetupCB
;; 	))
let((simDir);grpDir="/group/validmgr" simDir=sprintf(nil "%s/$USER/Sim" grpDir)
simDir="./Sim" printf("Simulation directory set to : %s\n" simDir)
(system sprintf(nil "ls %s 1>/dev/null 2>/dev/null" simDir))
; (system sprintf(nil "ls %s 2>/dev/null" simDir)) ; force listing. When mounted, sometimes subfolders does not apear.
when( isDir(simDir) envSetVal( "asimenv.startup"  "projectDir" 'string simDir) printf("\t   _   _\n\t  [#] [#] \n\t    (_)   \n")))

envSetVal( "asimenv.startup" "simulator" 'string "spectre")

;; pour enlever 'Virtuoso' dans toutes les noms des fenetres
load("~/../ebecheto/Skill/rmVirtuoso.il")
hiSetBindKey( "Command Interpreter" "<Key>F9" "rmVirtuoso()")
hiSetBindKey( "Schematics" "<Key>F9" "rmVirtuoso()")
load("~/../ebecheto/Skill/dataBrowser.il")
hiSetBindKey( "Command Interpreter" "<Key>F10" "brDataBrowser()")
hiSetBindKey( "Schematics" "<Key>F10" "brDataBrowser()")
hiSetBindKey( "vivaGraph" "<Key>F5" "_ddtUpdateGraph(awvGetCurrentWindow()->vivaSession _wiaMapWinId(awvGetCurrentWindow()) nil nil)")
hiSetBindKey( "vivaGraph" "<Key>s" "_ddtExecuteAction(awvGetCurrentWindow()->vivaSession \"splitStrip\")")
hiSetBindKey( "vivaGraph" "Shift<Key>s" "_ddtExecuteAction(awvGetCurrentWindow()->vivaSession \"moveAnalogTracesNewStrip\")")

;; load("~/../ebecheto/Skill/pin2label_v2.il")
;; load("~/../ebecheto/Skill/centerAlignXY.il")   ; fonctions centerAlignXY et touche
;; to use cross section tool : /data/ebecheto/soft/gen_cross_section-20080522 
;;load("/data/ebecheto/soft/gen_cross_section-20080522/cadence/layout_menu.il")
;;load("/data/ebecheto/soft/gen_cross_section-20080522/cadence/cross_section.il")
;;deRegUserTriggers("maskLayout" nil nil 'myLayoutTrigger)

;############################################################################
;#                                           
;# THE END! 
;#
;#############################################################################

 printf("END OF EDEDEDED CUSTOMIZATION.\n")
 printf("\nload %L" "~/.cdsinit_personal")
 printf("\n")
;END OF THE USER CUSTOMIZATION FILE

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;; UNCOMMENT THE 2 FOLLOWING LINES FOR CALIBRE/VIRTUOSO INTERFACE ;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;load(strcat(getShellEnvVar("MGC_HOME") "/shared/pkgs/icv.ixl/tools/queryskl/calibre.skl"))
;; parfois : load(strcat(getShellEnvVar("MGC_HOME") "/shared/pkgs/icv.ss5/tools/queryskl/calibre.skl"))
;mgc_rve_init_socket(9189)
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


procedure(userPostInstallTriggerSch(args) let( (win titleName) 
;;	printf("HELLO?! %s\n" hiGetCurrentWindow())
		win=args->window titleName = hiGetWindowName(win)
	foreach(mapcar name '( "Virtuoso. " "Schematic Reading" "Schematic Editing" "Analog Design Environment" ) 
		rexCompile(name) titleName=rexReplace( titleName  "" 0))
	hiSetWindowName( win sprintf(nil "S%s" titleName ))
	hiSetIconName( win sprintf(nil "S%s" titleName ))
	   ));; for some Linux distrib, hiSetIconName is also needed

if(deGetAppInfo("schematic")->userPostInstallTrigger=='userPostInstallTriggerSch 
	then printf("do not need to UnRegisterbecause same trigger exist\n")
	else if(deGetAppInfo("schematic")->userPostInstallTrigger==nil then printf("nothing to unRegister\n") 
		else deUnRegUserTriggers("schematic"))
	deRegUserTriggers("schematic" nil nil 'userPostInstallTriggerSch)
	printf("Does ?Only one trigger can exist : %s\n" deGetAppInfo("schematic")->userPostInstallTrigger) 
); chek a bit useless if I am the only one to customize it.


procedure(userPostInstallTriggerADE(args) let( (win titleName) 
rexCompile( "Analog Design Environment" )
		 win=args->window titleName = hiGetWindowName(win)
		 hiSetWindowName( win rexReplace( titleName "ADE" 0) )
		 hiSetIconName( win rexReplace( titleName "ADE" 0) );; for some Linux distrib, hiSetIconName is also needed
	   ))

; deRegUserTriggers("Artist" nil nil 'userPostInstallTriggerADE);==>*Error* Can't register user triggers because viewType Artist is not registered.
; deRegUserTriggers("analogArtist-schematic" nil nil 'userPostInstallTriggerADE)
deRegUserTriggers("analogArtist-schematic" nil nil 'userPostInstallTriggerSch)

; setPrompts(sprintf(nil "%s %s" car(getPrompts( )) "@ IPNL CRNS/IN2P3") "@ IPNL neutrino")

hiSetFilterOptions(nil nil t  nil t t t)
alias(lf listFunctions)
alias(gss geGetSelectedSet)


;; envSetVal("asimenv.distributed" "remoteShell" 'string "ssh") ;;<== pour ssh
;; awvSetOptionValue('hcTmpDir "/tmp")

;; The .cdsenv setting is:
;; adexl.simulation saveLastNHistoryEntries int 5
;; which in .cdsinit (SKILL syntax) would be:
envSetVal("adexl.simulation" "saveLastNHistoryEntries" 'int 1)
envSetVal("spectre.envOpts" "licOrder" 'string "Virtuoso_Multi_mode_Simulation:Virtuoso_Spectre")

; test pour ./cdsLibMgr.il
procedure( abLibMgrInitProc()    fprintf(stdout  "My InitProc was called\n%L\n" listFunctions("")))
procedure( abLibMgrCloseProc()   fprintf(stdout "My CloseProc was called\n"))
