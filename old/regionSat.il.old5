; wid = geGetWindowCellView()
idWin=hiGetCurrentWindow()
wid=idWin~>cellView

car(wid~>instances)~>??
;; TODO


;;openResults("/data/ebecheto/Sim/buf_adaptivRes_sim/spectre/schematic")
openResults(idWin~>artistSimulationDataDir)

x=car( wid~>instances )
x=car(last( wid~>instances ));;<== pmos for sure is the schematic

xS=0.5 yS=0 ;<== x et y space between gm et gds
xT = 1.5;<== coefficient de translation en x
yT = 1.2 ;<==  coefficient de translation en y
; selectResult('tran)
;; openResults("/data/ebecheto/Sim/buf_adaptivRes_sim/spectre/schematic")
;; region 2 schematic to gm gds
res = dbOpenCellViewByType( "analogLib" "res" "symbol" "schematicSymbol" "r")
Ibias = dbOpenCellViewByType( "analogLib" "idc" "symbol" "schematicSymbol" "r")

cv = dbOpenCellViewByType( wid~>libName wid~>cellName "schematic_smallSig" "schematic" "w")
foreach(mapcar x wid~>instances 
	when( ( x~>cellName=="nmos4" || x~>cellName=="pmos4" )
;;		printf("pv(%s %s ?result %s)\n" x~>name "region" "dcOpInfo-info") 
    hierName=x~>baseName
    t_name = hierName
    hierInstName=""
    when( geGetHierMemInst(idWin)
	i=0
        printf("Hierarchical Scope is :%s\n " caar(geGetHierMemInst(idWin))~>cellView~>cellName)
	printf("depth is :%d\n" length(geGetHierMemInst(idWin)))
        foreach(mapcar hierNb geGetHierMemInst(idWin)
	        when((hierInstName=="") hierInstName=car(hierNb)~>baseName
        	printf("%L\n" hierNb)
        	hierName=car(hierNb)~>baseName
        	printf("Level %d %L~>baseName:%L\n" i++ car(hierNb) list(hierName hierInstName car(hierNb)~>baseName))
     		hierInstName=sprintf(nil "%s.%s" hierInstName x~>baseName)
        	when(!cadr(hierNb) hierInstName=sprintf(nil "%s<%d>" hierInstName cadr(hierNb)))
		    t_name = hierInstName
        ) hierInstName
    );when hierarchy
		printf( "%L" list( "pv(" t_name "region" ?result "dcOpInfo-info")))
	when( pv( t_name "region" ?result "dcOpInfo-info")==2 
	xc=car(x~>xy)*xT
	yc=cadr(x~>xy)*yT
	printf("\n %s is Saturated. Position:%L\n" t_name list(xc yc))
Gate=car(setof(term x~>instTerms term~>name=="G"))   gNet=car(Gate~>net~>sigNames)
Drain=car(setof(term x~>instTerms term~>name=="D"))  dNet=car(Drain~>net~>sigNames)
Source=car(setof(term x~>instTerms term~>name=="S")) sNet=car(Source~>net~>sigNames)
	printf("%L" list( gNet dNet sNet pv( t_name "gm" ?result "dcOpInfo-info") ))

(dbCreateParamInst cv res nil (list xc yc) "R0" 1 list(list("r" "string" "5k")))
(dbCreateParamInst cv Ibias nil (list xc+xS yc+yS) "R0" 1 list(list("idc" "string" "3k")))
wireId=car(schCreateWire( cv "draw" "direct" list(xc+xS:yc+yS xc:yc) 0.0625 0.0625 0.0125  )); <== creat wire line
wireBox=((lambda (arg) (append list(caar(arg)+caadr(arg)) list(cadar(arg)+ cadadr(arg)) )) list(centerBox(wireId~>bBox) list(0 0.05) ) )
lbId=schCreateWireLabel( cv wireId wireBox sNet "lowerCenter" "R0" "fixed" 0.0625 nil ) 
yw=-0.375
wireId=car(schCreateWire( cv "draw" "direct" list(xc+xS:yw+yc+yS xc:yw+yc) 0.0625 0.0625 0.0125  )); <== creat wire line
wireBox=((lambda (arg) (append list(caar(arg)+caadr(arg)) list(cadar(arg)+ cadadr(arg)) )) list(centerBox(wireId~>bBox) list(0 -0.1) ) )
lbId=schCreateWireLabel( cv wireId wireBox dNet "lowerCenter" "R0" "fixed" 0.0625 nil ) 

	); when nmos||pmos saturated
); when nmos4
); foreach
dbSave(cv) 
geOpen(?lib cv~>libName ?cell cv~>cellName ?view "schematic_smallSig" ?mode "r")
;; dbClose(cv)
simulator('spectre)

;; load("~/Skill/regionSat.il.old5")