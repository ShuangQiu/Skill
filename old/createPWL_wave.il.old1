;USAGE : creatPWL_wave(?data "0001 1101")
procedure(creatPWL_wave( @optional 
(data "0001 1101") 
(chip "1000 0011")
(register "0000 0001")
)
; si tdelay=200, t0=220 => debut trame a t0+delay=420
t0=230n; temps de depart. en simu, rajouter t_delay
dt=t0 ;<=delta time
oldbit="0" i=0
rexCompile(" ") name=rexReplace(data "_" 1)
printf("V_%s (net_%s 0) vsource dc=3.3 type=pwl delay=t_delay 
wave=[ \\\n0 0 t_on h t_start h (t_start+f) d\\\n" 
name name)
foreach(bit remove(" " parseString( chip ""))
;; printf("BIt %d is up_Oldbit=%s\n" i oldbit)
if( bit=="1" then when(oldbit=="0" printf("%g d %g h\\\n" dt dt+1n))
else              when(oldbit=="1" printf("%g h %g d\\\n" dt dt+1n ))
)
dt=dt+40n
oldbit=bit)

;; Write bit+ack du chip adresse
when(oldbit=="1" printf("%g h %g d\\\n" dt dt+1n));<=write bit
dt=dt+40n
printf("%g d    %g h\\\n" dt dt+1);<=ack
dt=dt+40n oldbit="1"
foreach(bit remove(" " parseString( register ""))
if( bit=="1" then when(oldbit=="0" printf("%g d %g h\\\n" dt dt+1n))
else              when(oldbit=="1" printf("%g h %g d\\\n" dt dt+1n ))
)
dt=dt+40n
oldbit=bit) 
;; acknowledge du registre
when(oldbit=="0" printf("%g d %g h\\\n" dt dt+1n)) dt=dt+40n oldbit="1"
;; write data
foreach(bit remove(" " parseString( data ""))
if( bit=="1" then when(oldbit=="0" printf("%g d %g h\\\n" dt dt+1n))
else              when(oldbit=="1" printf("%g h %g d\\\n" dt dt+1n ))
)
dt=dt+40n
oldbit=bit) 
;; acknowledge de data + stop
when(oldbit=="0" printf("%g d    %g h\\\n" dt dt+1n)) dt=dt+40n;<= ack bit
printf("%g h    %g d\\\n" dt dt+1n);<= stop  bit down
dt=dt+40n ; oldbit="0"
printf("%g d %g h\\\n" dt dt+1n);<= stop  bit release

printf("]\n")
); fin proc

;; load("createPWL_wave.il")