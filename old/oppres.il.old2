param = cdfFindParamByName( cdfGetInstCDF(css()) "c"); => cdf:
paramL = cdfFindParamByName( cdfGetInstCDF(css()) "l"); => cdf:
paramW = cdfFindParamByName( cdfGetInstCDF(css()) "w"); => cdf:
paramReff = cdfFindParamByName( cdfGetInstCDF(css()) "reff"); => cdf:
paramR = cdfFindParamByName( cdfGetInstCDF(css()) "r"); => cdf:
paramS = cdfFindParamByName( cdfGetInstCDF(css()) "s"); => cdf:
paramM = cdfFindParamByName( cdfGetInstCDF(css()) "m"); => cdf:
paramL~>value="1.1u"
paramW~>value="0.32u"
;paramReff~>value
inst=css() geSelectFig(inst) 
Rold="1.2M"
when(aelNumber(paramL~>value)<aelNumber("1.1u") paramL~>value="1.1u")
when(aelNumber(paramW~>value)<aelNumber("0.32u") paramL~>value="0.32u")
when(aelNumber(paramL~>value)>aelNumber("1000u") paramL~>value="1000u")
when(aelNumber(paramW~>value)>aelNumber("1000u") paramL~>value="1000u")
; suppose paramS~>value=1 then increase L
while((and aelNumber(paramReff~>value)<=aelNumber(Rold) aelNumber(paramL~>value)<(aelNumber("1000u")/2)) 
paramL~>value=aelSuffixNotation(aelNumber(paramL~>value)*2)
schHiObjectProperty() hiFormDone(schObjPropForm)
printf("Reff=%L<%L L=%L eval=%L\n" paramReff~>value Rold paramL~>value evalstring(paramR->callback))
);end while
;=> augmenter paramS
ratio=ceiling(aelNumber(Rold)/aelNumber(paramReff~>value))
paramS~>value=paramS~>value*ratio
evalstring(paramS->callback)
schHiObjectProperty() hiFormDone(schObjPropForm)
; def params
Rt=aelNumber(Rold); Resistance Target
pourcent=0.0001; 1%

; fonction recursive
defun( dichoL (L1 L2 @optional (stop 0)) ; dichotomie algorithm; keyword dicotomie dicothomie
let(( m R) stop++
m=(L2+L1)/2
printf("L1=%s L2=%s m=%s Rt=%s R=%s\n" aelSuffixNotation(L1) aelSuffixNotation(L2) aelSuffixNotation(m) aelSuffixNotation(Rt) aelSuffixNotation(aelNumber(paramReff~>value)))
if((or m/L2<=pourcent stop>=10) then printf("%g<%g?\n" m/L2 pourcent ) ; stop here
else
paramL~>value=aelSuffixNotation(m)
schHiObjectProperty() hiFormDone(schObjPropForm)
R=aelNumber(paramReff~>value)
if(R>Rt then printf("dichoL(%g %g)\n" L1 m)
dichoL(L1 m stop); on iter a gauche
else printf("dichoL(%g %g)\n" m L2)
dichoL(m L2 stop); on iter a droite
))))
;; info sur inst  selection
aelNumber(paramW~>value)
aelNumber(paramL~>value)
aelNumber(paramReff~>value)
paramS~>value
paramM~>value
paramR->value


dichoL(aelNumber(paramL~>value)/2 1000u)
