; load("osc.il")
; bug counter @909ps => simuler a part.
; quand 1 seul enable, freqDiff=2.3521p Fslow=


rdir="/group/validmgr/Sim/osc_matrix_sim/UltraSim/schematic/netlist/../psf0"
;; rdir="/group/validmgr/Sim/osc_matrix_sim/UltraSim/schematic/netlist/../psf1"
;; rdir="/group/validmgr/Sim/osc_matrix_sim/UltraSim/schematic/netlist/../psf2"
;; rdir="/group/validmgr/Sim/osc_matrix_sim/UltraSim/schematic/netlist/../psf3"
;; rdir="/group/validmgr/Sim/osc_matrix_sim/UltraSim/schematic/netlist/../psf4"
simulator('UltraSim)
when(rdir resultsDir(openResults(rdir)))

logFile=sprintf(nil "%s/osc.log" pwd())
system(sprintf(nil "echo -n -e _________ >> %s; date >>%s" logFile logFile)) 

pf = outfile(logFile "a")
; UltraSim results();=> (variables tran); et non tran-tran 
;! => utiliser plutot VT

v("/slow" ?result "tran")
Fslow=frequency(VT("/slow"))
Ffast=frequency(VT("/fast" ))
freqDiff = ((1 / frequency(VT("/fast"))) - (1 / frequency(VT("/slow"))))
fprintf(pf "Fslow=%s\nFfast=%s\nfreqDiff=%s\n" aelSuffixNotation(Fslow) aelSuffixNotation(Ffast) aelSuffixNotation(freqDiff))

ocnPrint(?output pf cross(VT("/sync") 1 1 "falling"  t "time"  ))
close(pf)
pf=nil


last2=cross(VT("/fast") 1 -2 "rising" nil nil  );=> last event ie. @ 202.0E-9
last1=cross(VT("/fast") 1 -1 "rising" nil nil  );=> last event ie. @ 202.0E-9
slow2=cross(VT("/slow") 1 -2 "rising" nil nil  );=> last event ie. @ 202.0E-9
slow1=cross(VT("/slow") 1 -1 "rising" nil nil  );=> last event ie. @ 202.0E-9
per=last1-last2
tset=last2+per/4

v("/S<1>" "tran")
cntS=0 cntF=0
foreach(mapcar i linRg(1 10 1) cntS=cntS+2**(i-1)*round(value(evalstring(sprintf(nil "VT(\"/S<%d>\")" i)) tset)/1.8))
foreach(mapcar i linRg(1 10 1) cntF=cntF+2**(i-1)*round(value(evalstring(sprintf(nil "VT(\"/F<%d>\")" i)) tset)/1.8))

printf("At %s\n
cntS=%d t1=%s t2=%s\n
cnfF=%d t1=%s t2=%s\n
" aelSuffixNotation(tset) cntS aelSuffixNotation(slow1) aelSuffixNotation(slow2) cntF aelSuffixNotation(last1) aelSuffixNotation(last2))

printf("CHECK LOG FILE : %s\n" logFile)
printf("edit(%L)\n" logFile)
;; sprintf(cmd "cat %s|sed '/^$/d' >.tmp;mv .tmp %s" logFile logFile)
;; system(cmd)

unless(fboundp('dateStamp) load("dateStamp.il"))

nlistName=asiGetSimInputFileName(asiGetCurrentSession())
nlist=strcat(asiGetNetlistDir(asiGetCurrentSession()) "/" nlistName)
saveNetlist=strcat(pwd() "/" dateStamp() "_"  nlistName)
system(sprintf(nil "echo cp %s %s" nlist saveNetlist))
system(sprintf(nil "cp %s %s" nlist saveNetlist))
printf("edit(%L)\n" saveNetlist)

