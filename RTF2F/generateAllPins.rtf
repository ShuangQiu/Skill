<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<!-- Created by htmlize-1.37 in inline-css mode. -->
<html>
  <head>
    <title> *temp*</title>
  </head>
  <body style="color: #000000; background-color: #ffffff; font-weight: bold;">
    <pre>

;; copyleft ebecheto

; load("genBox.il")

;=&gt; Nice one `que j'ai fait' ! ouvrir fenetre layout avec les elements places, sans les pins.
; et ca place les pins la ou il faut tout seul comme un grand.
; marche pas sur les mos, car il n'y a pas de couches pins sur les mos... pity
; load("/home/validmgr/ebecheto/Skill/generateAllPins.il")
; global power supply vdd!/gnd! treated separately with :  genPinMaster.il


ineed('(getInstTermPointLPP createPinLPP textDisplay2label metalPin2pinDrawing bus2flat) )



;; cv~&gt;??
;; setof(c cv~&gt;conns rexMatchp("!$" c~&gt;name));=&gt;(db:0x6609b81a db:0x6609b81b db:0x6609b82c db:0x6609b82d) ;=&gt; doublons
;; setof(c cv~&gt;sigNames rexMatchp("!$" c));=&gt;("gnd!" "vdd!") ;&lt;= pas de doublons

; append(cvs~&gt;terminals setof(c cv~&gt;sigNames rexMatchp("!$" c)))
; TODO : Rajouter vdd! xxx! (globals) si c'est possible
; en attendant, utiliser genPinMaster
; global terminals 
;; gloTerm=foreach(mapcan s setof(c cv~&gt;sigNames rexMatchp("!$" c)) 
;; setof(st cvs~&gt;terminals st~&gt;name==s))


;cvs~&gt;sigNames
;=&gt; ("in&lt;15&gt;" "Dzio&lt;13&gt;" "Dzio&lt;10&gt;" "Dzio&lt;9&gt;" "Dzio&lt;12&gt;" "out&lt;8&gt;" "out&lt;2&gt;" "VSS" "CHOP" "out&lt;14&gt;" "Dzio&lt;11&gt;" "RDIOD" "sub!" "VSB2" "out&lt;13&gt;" "out&lt;12&gt;" "Vref" "in&lt;12&gt;" "RN" "Dzio&lt;14&gt;" "in&lt;8&gt;" "out&lt;11&gt;" "out&lt;10&gt;" "out&lt;7&gt;" "in&lt;0&gt;" "Dzk" "in&lt;11&gt;" "Dzio&lt;5&gt;" "Dzio&lt;1&gt;" "in&lt;10&gt;" "in&lt;9&gt;" "T1" "Dzio&lt;4&gt;" "VDD" "out&lt;9&gt;" "Dzio&lt;0&gt;" "VDB1" "out&lt;0&gt;" "in&lt;6&gt;" "in&lt;5&gt;" "Dzio&lt;3&gt;" "Dzio&lt;8&gt;" "in&lt;4&gt;" "out&lt;15&gt;" "in&lt;3&gt;" "Dzo" "in&lt;2&gt;" "out&lt;4&gt;" "out&lt;3&gt;" "in&lt;1&gt;" "in&lt;7&gt;" "Dzio&lt;2&gt;" "Dzio&lt;7&gt;" "Cstim" "Dzio&lt;6&gt;" "out&lt;6&gt;" "in&lt;14&gt;" "out&lt;5&gt;" "Dzi" "ENA" "out&lt;1&gt;" "in&lt;13&gt;")
; cv=geGetWindowCellView()

defun(generateAllPins (@optional (cv t)(only1 t)(labelPin t))
let( (cvs  its flatBus noBus flats sig dir ins pn apn iname)
when(cv==t cv=geGetWindowCellView())
cvs=dbOpenCellViewByType(cv~&gt;libName cv~&gt;cellName "schematic")
unless(cvs printf("Hey dude, where is your schematic ? %L\n" list(cv~&gt;libName cv~&gt;cellName )))

nameDirs=foreach(mapcan tn cvs~&gt;terminals 
if(length(parseString(tn~&gt;name ":"))&gt;1 foreach(mapcar bus bus2flat(tn~&gt;name) list(bus tn~&gt;direction)) list(list(tn~&gt;name tn~&gt;direction)))
);=&gt;  (("ENA" "input")... ("out&lt;11&gt;" "inputOutput"))

sigNames=setof(s cvs~&gt;sigNames dbFindSigByName(cvs s)~&gt;term)

foreach(mapcar nameDir nameDirs
sigName=car(nameDir)
; name;=&gt;"Q_0"
; itsd=cadr(its);=&gt;(("Z" "I10") ("A" "I0"))
itsd=foreach(mapcar mit dbFindSigByName(cvs sigName)~&gt;memInstTerms list(car(mit)~&gt;name dbGetMemName(car(mit)~&gt;inst~&gt;name cadr(mit))))
dir=cadr(nameDir)

when(only1 itsd=list(car(itsd)))
foreach(mapcar it itsd
;it=car(itsd);=&gt;("Z" "I10")
ins=cadr(it);=&gt;"I10"
pn=car(it);=&gt;"Z"  ;&lt;== TODO : if instance as a pin Z&lt;0:1&gt; it bugs .... or do it before in the creation of itsd
printf("placing %s-pin on %s-term of %s-inst._%L\n" sigName pn||"pn?" ins||"ins?" list(only1 cv~&gt;terminals~&gt;name))
;cv~&gt;instances~&gt;name;=&gt;("|I0" "|I5" "|I1" "|I2" "|I7" "|I3" "|I4" "|I6" "|I8" "|I9" "|I10" "I__167844" "I1")
unless(only1&amp;&amp;member(sigName cv~&gt;terminals~&gt;name) printf("pin%L\n" list(ins pn))
unless(ins printf("WARNING ins=nil?=%L in : %L;&lt;= CANNOT FIND\n" ins it))
when(ins 
iname=if(length(pins=parseString(ins "&lt;&gt;"))&gt;1 strcat("|" car(pins) "(" cadr(pins) ")") strcat("|" ins))
; si Instance&lt;0&gt; =&gt; |Instance(0), sinon |Instance
if(inst=car(setof(inst cv~&gt;instances inst~&gt;name==iname))
;; schema inst INST&lt;0:1&gt; ==&gt; layout |INST(0) et |INST(1) pourquoi ce changement ?
;; ||inst=car(setof(inst cv~&gt;instances inst~&gt;name==strcat("|" ins))) replace (par&lt; et )par&gt;
;; ceci deverait etre le default mode, mais permettre une liste de correspondance (dico)
then
apn=assoc(pn getInstTermPointLPP(inst))
;=&gt;("Z" (5.1 22.71) ("M1" "pin") ((5.0 22.41) (5.2 23.01)) db:0x1495141d)
; createPinLPP(name bBox lpp dir)
bBox=nth(3 apn) lpp=nth(2 apn); dir=nth(4 apn)~&gt;pin~&gt;term~&gt;direction
printf("createPinLPP%L\n" list(sigName bBox lpp dir))
if(bBox&amp;&amp;lpp then createPinLPP(sigName bBox lpp dir) else printf("NO LPP or bBox for:%L\n" list(sigName bBox lpp dir)))
else
printf("%s not found\n" iname)
)))
)
)
when(labelPin textDisplay2label(cv) metalPin2pinDrawing(cv))
))

printf("generateAllPins()\n")
printf("generateAllPins(t);=&gt; geGetWindowCellView()\n")
printf("generateAllPins(t t)\n")
printf("generateAllPins(t nil t)\n ;&lt;= que j'utilise pour AMS035\n")
printf("generateAllPins(t nil);&lt;= not only one =&gt; for all =&gt; overides\n")
printf("generateAllPins(t t t);&lt;=default : one pin on each term for ams (label and PIN purpose)\n")
printf("generateAllPins(t t nil);&lt;= one pin on each term for ibm (textdisplay, default layer)\n")

</pre>
  </body>
</html>
